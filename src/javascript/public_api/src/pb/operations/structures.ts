// @generated by protobuf-ts 2.9.4 with parameter generate_dependencies,long_type_string,optimize_code_size
// @generated from protobuf file "operations/structures.proto" (package "pb.operations", syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
import { Timestamp } from "../google/protobuf/timestamp";
/**
 * @generated from protobuf message pb.operations.Balance
 */
export interface Balance {
    /**
     * @generated from protobuf field: int64 id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: int64 userId = 2;
     */
    userId: string;
    /**
     * @generated from protobuf field: double currentBalance = 3;
     */
    currentBalance: number;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp createdAt = 4;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp updatedAt = 5;
     */
    updatedAt?: Timestamp;
}
/**
 * @generated from protobuf message pb.operations.Operation
 */
export interface Operation {
    /**
     * @generated from protobuf field: int64 id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: int64 userId = 2;
     */
    userId: string;
    /**
     * @generated from protobuf field: pb.operations.OperationType operationType = 3;
     */
    operationType: OperationType;
    /**
     * @generated from protobuf field: double cost = 4;
     */
    cost: number;
    /**
     * @generated from protobuf field: string args = 5;
     */
    args: string;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp createdAt = 6;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp updatedAt = 7;
     */
    updatedAt?: Timestamp;
}
/**
 * @generated from protobuf message pb.operations.Record
 */
export interface Record {
    /**
     * @generated from protobuf field: int64 id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: int64 operationId = 2;
     */
    operationId: string;
    /**
     * @generated from protobuf field: double userBalance = 4;
     */
    userBalance: number;
    /**
     * @generated from protobuf field: bool deleted = 5;
     */
    deleted: boolean;
    /**
     * @generated from protobuf field: string operationResponse = 6;
     */
    operationResponse: string;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp createdAt = 7;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp updatedAt = 8;
     */
    updatedAt?: Timestamp;
    /**
     * @generated from protobuf field: pb.operations.Operation operation = 9;
     */
    operation?: Operation;
}
/**
 * @generated from protobuf enum pb.operations.OperationType
 */
export enum OperationType {
    /**
     * @generated from protobuf enum value: ADDITION = 0;
     */
    ADDITION = 0,
    /**
     * @generated from protobuf enum value: SUBTRACTION = 1;
     */
    SUBTRACTION = 1,
    /**
     * @generated from protobuf enum value: MULTIPLICATION = 2;
     */
    MULTIPLICATION = 2,
    /**
     * @generated from protobuf enum value: DIVISION = 3;
     */
    DIVISION = 3,
    /**
     * @generated from protobuf enum value: SQUARE_ROOT = 4;
     */
    SQUARE_ROOT = 4,
    /**
     * @generated from protobuf enum value: RANDOM_STRING = 5;
     */
    RANDOM_STRING = 5
}
// @generated message type with reflection information, may provide speed optimized methods
class Balance$Type extends MessageType<Balance> {
    constructor() {
        super("pb.operations.Balance", [
            { no: 1, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/ },
            { no: 2, name: "userId", kind: "scalar", T: 3 /*ScalarType.INT64*/ },
            { no: 3, name: "currentBalance", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 4, name: "createdAt", kind: "message", T: () => Timestamp },
            { no: 5, name: "updatedAt", kind: "message", T: () => Timestamp }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message pb.operations.Balance
 */
export const Balance = new Balance$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Operation$Type extends MessageType<Operation> {
    constructor() {
        super("pb.operations.Operation", [
            { no: 1, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/ },
            { no: 2, name: "userId", kind: "scalar", T: 3 /*ScalarType.INT64*/ },
            { no: 3, name: "operationType", kind: "enum", T: () => ["pb.operations.OperationType", OperationType] },
            { no: 4, name: "cost", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 5, name: "args", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "createdAt", kind: "message", T: () => Timestamp },
            { no: 7, name: "updatedAt", kind: "message", T: () => Timestamp }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message pb.operations.Operation
 */
export const Operation = new Operation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Record$Type extends MessageType<Record> {
    constructor() {
        super("pb.operations.Record", [
            { no: 1, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/ },
            { no: 2, name: "operationId", kind: "scalar", T: 3 /*ScalarType.INT64*/ },
            { no: 4, name: "userBalance", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 5, name: "deleted", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "operationResponse", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "createdAt", kind: "message", T: () => Timestamp },
            { no: 8, name: "updatedAt", kind: "message", T: () => Timestamp },
            { no: 9, name: "operation", kind: "message", T: () => Operation }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message pb.operations.Record
 */
export const Record = new Record$Type();
