// @generated by protobuf-ts 2.9.4 with parameter generate_dependencies,long_type_string,optimize_code_size
// @generated from protobuf file "users/users_service.proto" (package "pb.users", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { UserService } from "./users_service";
import type { DeleteUserResponse } from "./users_service";
import type { DeleteUserRequest } from "./users_service";
import type { GetUserByUsernameResponse } from "./users_service";
import type { GetUserByUsernameRequest } from "./users_service";
import type { GetUserResponse } from "./users_service";
import type { GetUserRequest } from "./users_service";
import type { CreateUserResponse } from "./users_service";
import type { CreateUserRequest } from "./users_service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { CheckUserCredentialsResponse } from "./users_service";
import type { CheckUserCredentialsRequest } from "./users_service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service pb.users.UserService
 */
export interface IUserServiceClient {
    /**
     * @generated from protobuf rpc: CheckUserCredentials(pb.users.CheckUserCredentialsRequest) returns (pb.users.CheckUserCredentialsResponse);
     */
    checkUserCredentials(input: CheckUserCredentialsRequest, options?: RpcOptions): UnaryCall<CheckUserCredentialsRequest, CheckUserCredentialsResponse>;
    /**
     * @generated from protobuf rpc: CreateUser(pb.users.CreateUserRequest) returns (pb.users.CreateUserResponse);
     */
    createUser(input: CreateUserRequest, options?: RpcOptions): UnaryCall<CreateUserRequest, CreateUserResponse>;
    /**
     * @generated from protobuf rpc: GetUser(pb.users.GetUserRequest) returns (pb.users.GetUserResponse);
     */
    getUser(input: GetUserRequest, options?: RpcOptions): UnaryCall<GetUserRequest, GetUserResponse>;
    /**
     * @generated from protobuf rpc: GetUserByUsername(pb.users.GetUserByUsernameRequest) returns (pb.users.GetUserByUsernameResponse);
     */
    getUserByUsername(input: GetUserByUsernameRequest, options?: RpcOptions): UnaryCall<GetUserByUsernameRequest, GetUserByUsernameResponse>;
    /**
     * @generated from protobuf rpc: DeleteUser(pb.users.DeleteUserRequest) returns (pb.users.DeleteUserResponse);
     */
    deleteUser(input: DeleteUserRequest, options?: RpcOptions): UnaryCall<DeleteUserRequest, DeleteUserResponse>;
}
/**
 * @generated from protobuf service pb.users.UserService
 */
export class UserServiceClient implements IUserServiceClient, ServiceInfo {
    typeName = UserService.typeName;
    methods = UserService.methods;
    options = UserService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: CheckUserCredentials(pb.users.CheckUserCredentialsRequest) returns (pb.users.CheckUserCredentialsResponse);
     */
    checkUserCredentials(input: CheckUserCredentialsRequest, options?: RpcOptions): UnaryCall<CheckUserCredentialsRequest, CheckUserCredentialsResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<CheckUserCredentialsRequest, CheckUserCredentialsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateUser(pb.users.CreateUserRequest) returns (pb.users.CreateUserResponse);
     */
    createUser(input: CreateUserRequest, options?: RpcOptions): UnaryCall<CreateUserRequest, CreateUserResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateUserRequest, CreateUserResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetUser(pb.users.GetUserRequest) returns (pb.users.GetUserResponse);
     */
    getUser(input: GetUserRequest, options?: RpcOptions): UnaryCall<GetUserRequest, GetUserResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetUserRequest, GetUserResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetUserByUsername(pb.users.GetUserByUsernameRequest) returns (pb.users.GetUserByUsernameResponse);
     */
    getUserByUsername(input: GetUserByUsernameRequest, options?: RpcOptions): UnaryCall<GetUserByUsernameRequest, GetUserByUsernameResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetUserByUsernameRequest, GetUserByUsernameResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteUser(pb.users.DeleteUserRequest) returns (pb.users.DeleteUserResponse);
     */
    deleteUser(input: DeleteUserRequest, options?: RpcOptions): UnaryCall<DeleteUserRequest, DeleteUserResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteUserRequest, DeleteUserResponse>("unary", this._transport, method, opt, input);
    }
}
